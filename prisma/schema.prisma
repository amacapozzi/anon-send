// prisma/schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    // uncomment next line if you use Prisma <5.10
    // directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
    id        String        @id @default(cuid())
    alias     String        @unique
    password  String
    createdAt DateTime      @default(now())
    messages  Message[]     @relation("SentMessages")
    views     MessageView[]

    blocked   BlockedUser[] @relation("Blocker")
    blockedBy BlockedUser[] @relation("Blocked")
}

model BlockedUser {
    id String @id @default(cuid())

    blockerId String
    blocker   User   @relation("Blocker", fields: [blockerId], references: [id])

    blockedId String
    blocked   User   @relation("Blocked", fields: [blockedId], references: [id])

    createdAt DateTime @default(now())

    @@unique([blockerId, blockedId])
}

model Message {
    id        String        @id @default(cuid())
    subject   String
    body      String
    recipient String
    encrypted Boolean       @default(false)
    senderId  String?
    sender    User?         @relation("SentMessages", fields: [senderId], references: [id])
    files     File[]
    views     MessageView[]
    createdAt DateTime      @default(now())
    expiresAt DateTime? // for autodestruct
    maxViews  Int? // max allowed views
    isDeleted Boolean       @default(false)
}

model File {
    id         String   @id @default(cuid())
    filename   String
    mimetype   String
    size       Int
    encrypted  Boolean  @default(false)
    messageId  String
    message    Message  @relation(fields: [messageId], references: [id])
    uploadedAt DateTime @default(now())
}

model MessageView {
    id        String   @id @default(cuid())
    messageId String
    message   Message  @relation(fields: [messageId], references: [id])
    userId    String?
    user      User?    @relation(fields: [userId], references: [id])
    viewedAt  DateTime @default(now())
    ipAddress String?
    userAgent String?
}
